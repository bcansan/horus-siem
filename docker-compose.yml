version: '3.8'

services:
  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - horus-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=http://backend:8000
    networks:
      - horus-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - POSTGRES_URL=postgresql://horus:horuspass@postgres:5432/horus
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    volumes:
      - ./backend:/app
      - ./rules:/app/rules
    depends_on:
      - postgres
      - elasticsearch
      - redis
    networks:
      - horus-network
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - POSTGRES_URL=postgresql://horus:horuspass@postgres:5432/horus
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./rules:/app/rules
    depends_on:
      - postgres
      - elasticsearch
      - redis
    networks:
      - horus-network
    restart: unless-stopped
    command: celery -A workers.tasks worker --loglevel=info

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=horus
      - POSTGRES_USER=horus
      - POSTGRES_PASSWORD=horuspass
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - horus-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - horus-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - horus-network
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1

volumes:
  postgres-data:
  redis-data:
  elasticsearch-data:

networks:
  horus-network:
    driver: bridge


